<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Activates scanning of @Autowired -->
	<context:annotation-config />
    <aop:aspectj-autoproxy/>
	
	<!-- SCANNING -->
	<!-- Activates scanning of @Controller / @Service -->
	<context:component-scan base-package="com.mcl.backend.core" />
	
	<!--  DTO and WEB Service commented as this is not required in current phase -->
	<!-- 
	<context:component-scan base-package="com.bankofireland.privatebanking.backend.webservice" />
	<context:component-scan base-package="com.bankofireland.privatebanking.backend.dto"/>
	<context:component-scan base-package="com.bankofireland.privatebanking.backend.util"/>
	-->
	
	<!-- Commented as this is not required in current phase -->
	<!-- MARSHALLING -->
	<!-- 
	<bean id="targetType" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
		<property name="staticField">
		<value>org.springframework.jms.support.converter.MessageType.TEXT</value> 
		</property>
	</bean>
	<bean id="testOxmMessageConverter" class="org.springframework.jms.support.converter.MarshallingMessageConverter">
		<property name="targetType" ref="targetType" /> 
		<property name="marshaller" ref="testMarshaller" /> 
		<property name="unmarshaller" ref="testMarshaller" /> 
	</bean>
  
    <oxm:jaxb2-marshaller id="testMarshaller">
		<oxm:class-to-be-bound 	name="com.bankofireland.privatebanking.backend.dto.test.TestRequest" />
	</oxm:jaxb2-marshaller>
	-->
	
	<!-- PROFILING -->
    <bean id="timingAspect" class="org.perf4j.log4j.aop.TimingAspect"/>	
    
    <!-- RESOURCING -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:config/*.properties</value>
            </list>       
        </property> 
	     <property name="placeholderPrefix" value="mcl{"/>
	     <property name="placeholderSuffix" value="}" />
    </bean>    
   
    
    <!-- VALIDATION -->
    <!-- 
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="mappingLocations">
            <set>
                <value>classpath:validation/constraints-test.xml</value>
            </set>
        </property>
    </bean>
    
    <bean id="springValidator" class="org.springframework.validation.beanvalidation.SpringValidatorAdapter">
	   <constructor-arg name="targetValidator" ref="validator"/>
	</bean>
	-->
	
	<!-- DATASOURCE AND TX MANAGEMENT -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="mcl{jdbc.driverClassName}" />
		<property name="url" value="mcl{jdbc.url}" />
		<property name="username" value="mcl{jdbc.username}" />
		<property name="password" value="mcl{jdbc.password}" />
		<property name="maxActive" value="100" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultAutoCommit" value="true" />
	</bean>
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://10.105.190.26:3306/mcl" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="maxActive" value="100" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultAutoCommit" value="true" />
	</bean> -->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- IF YOU WANT TO USE JNDI, THEN GIVE THIS BEAN "dataSource" NAME and upper bean as localDataSource, in case of fallback -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:jdbc/TestServiceDS" resource-ref="false" default-ref="localDataSource"/> -->
	
	<!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->

	<!-- Hibernate SessionFactory -->
	<!-- <bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<value>
			    hibernate.dialect=${hibernate.dialect}
				hibernate.query.substitutions=true 'Y', false 'N'
            </value>
		</property>
	</bean> -->

	<!-- Transaction manager for a single Hibernate SessionFactory -->
	<!-- <bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource" />
 	</bean>
 	
 	
	<!-- Activates annotation based transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
</beans>

